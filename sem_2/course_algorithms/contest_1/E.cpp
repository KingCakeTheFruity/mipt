/*
Группа математиков проводит бои между натуральными числами. Результаты боя между двумя натуральными числами, вообще говоря, случайны, однако подчиняются следующему правилу: если одно из чисел не менее чем в два раза превосходит другое, то большее число всегда побеждает; в противном случае победить может как одно, так и другое число.
 
Бой называется неинтересным, если его результат предопределён. Множество натуральных чисел называется мирным, если бой любой пары различных чисел из этого множества неинтересен. Силой множества называется сумма чисел в нём. Сколько существует мирных множеств натуральных чисел силы n?
*/
 
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
 
using namespace std;
 
int main() {
	int n = 0;
	scanf("%d", &n);
 
    vector<vector<long long>> dp(n + 1, vector<long long>(n + 1, 0));
    dp[0][0] = 1;
 
    for (int i = 1; i <= n; ++i) { // power
        for (int j = 0; j <= i; ++j) { // max_elem
            int max_lesser = j / 2; // to sum all < this
            for (int k = 0; k <= max_lesser; ++k) {
                dp[i][j] += dp[i - j][k];
            }
        }
    }
 
    long long s = 0;
    for (long long x : dp[n]) {
        s += x;
    }
 
    printf("%lld\n", s);
 
	return 0;
}
 
// dp[i][j] - кол-во мирных множеств силы i с максимальным элементом j. Для такого дп очевидно насчитывается формула, итого дающая O(n^3)
